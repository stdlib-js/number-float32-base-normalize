// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var t,n;t=this,n=function(){"use strict";var t,n="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,r=Object.prototype.hasOwnProperty,e="function"==typeof Symbol?Symbol.toStringTag:"";t=n&&"symbol"==typeof Symbol.toStringTag?function(t){var n,f,i,u,a;if(null==t)return o.call(t);f=t[e],a=e,n=null!=(u=t)&&r.call(u,a);try{t[e]=void 0}catch(n){return o.call(t)}return i=o.call(t),n?t[e]=f:delete t[e],i}:function(t){return o.call(t)};var f=t,i="function"==typeof Float32Array,u=Number.POSITIVE_INFINITY,a="function"==typeof Float32Array?Float32Array:null,l="function"==typeof Float32Array?Float32Array:void 0,y=function(){var t,n,o;if("function"!=typeof a)return!1;try{n=new a([1,3.14,-3.14,5e40]),o=n,t=(i&&o instanceof Float32Array||"[object Float32Array]"===f(o))&&1===n[0]&&3.140000104904175===n[1]&&-3.140000104904175===n[2]&&n[3]===u}catch(n){t=!1}return t}()?l:function(){throw new Error("not implemented")},c="function"==typeof Uint32Array,p="function"==typeof Uint32Array?Uint32Array:null,b="function"==typeof Uint32Array?Uint32Array:void 0,d=function(){var t,n,o;if("function"!=typeof p)return!1;try{n=new p(n=[1,3.14,-3.14,4294967296,4294967297]),o=n,t=(c&&o instanceof Uint32Array||"[object Uint32Array]"===f(o))&&1===n[0]&&3===n[1]&&4294967293===n[2]&&0===n[3]&&1===n[4]}catch(n){t=!1}return t}()?b:function(){throw new Error("not implemented")},m=new y(1);new d(m.buffer)[0]=2139095040;var s=m[0],A=new y(1);new d(A.buffer)[0]=4286578688;var h=A[0],w="function"==typeof Math.fround?Math.fround:null,v=new y(1),S="function"==typeof w?w:function(t){return v[0]=t,v[0]};function g(t,n){return n!=n||n===s||n===h?(t[0]=n,t[1]=0,t):0!==n&&function(t){return Math.abs(t)}(n)<11754943508222875e-54?(n=S(8388608*n),t[0]=n,t[1]=-23,t):(t[0]=n,t[1]=0,t)}return function(t,n){return 1===arguments.length?g([0,0],t):g(t,n)}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).normalizef=n();
//# sourceMappingURL=index.js.map
